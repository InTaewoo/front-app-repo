name: Deploy To EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: self-hosted  # 내부망에서 실행

    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: application.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            
      - name: ECR에 로그인하기
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Docker 이미지 생성
        run: docker build -t instagram-server .

      - name: Docker 이미지에 Tag 붙이기
        run: docker tag instagram-server ${{ steps.login-ecr.outputs.registry }}/instagram-server:latest

      - name: ECR에 Docker 이미지 Push하기
        run: docker push ${{ steps.login-ecr.outputs.registry }}/instagram-server:latest

      # - name: SSH로 EC2에 접속하기
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USERNAME }}
      #     key: ${{ secrets.EC2_PRIVATE_KEY }}
      #     script_stop: true
      #     script: |
      #       docker stop instagram-server || true
      #       docker rm instagram-server || true
      #       docker pull ${{ steps.login-ecr.outputs.registry }}/instagram-server:latest
      #       docker run -d --name instagram-server -p 8080:8080 ${{ steps.login-ecr.outputs.registry }}/instagram-server:latest

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        
      
      - name: Checkout kustomize repository
        uses: actions/checkout@v2
        with:
          repository: InTaewoo/k8s-manifest-repo
          ref: master
          token: \${{ secrets.ACTION_TOKEN }}
          path: k8s-manifest-repo
    
      - name: Update Kubernetes resources
        run: |
          echo \${{ steps.login-ecr.outputs.registry }}
          echo \${{ steps.image-info.outputs.ecr_repository }}
          echo \${{ steps.image-info.outputs.image_tag }}
          cd k8s-manifest-repo/overlays/dev/
          kustomize edit set image \${{ steps.login-ecr.outputs.registry}}/\${{ steps.image-info.outputs.ecr_repository }}=\${{ steps.login-ecr.outputs.registry}}/\${{ steps.image-info.outputs.ecr_repository }}:\${{ steps.image-info.outputs.image_tag }}
          cat kustomization.yaml
    
      - name: Commit files
        run: |
          cd k8s-manifest-repo
          git config --global user.email "oilehot0910@naver.com"
          git config --global user.name "Intaewoo"
          git commit -am "Update image tag"
          git push -u origin master